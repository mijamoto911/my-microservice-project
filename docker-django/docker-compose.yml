version: '3.9'

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: web
    env_file: .env
    volumes:
      - ./app:/app
    ports:
      - '8000:8000'
    depends_on:
      db:
        condition: service_healthy
    networks:
      - appnet

  db:
    image: postgres:16
    container_name: db
    environment:
      POSTGRES_DB: ${POSTGRES_NAME}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - '5432:5432'
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_NAME}']
      interval: 5s
      timeout: 3s
      retries: 10
    networks:
      - appnet

  nginx:
    image: nginx:alpine
    container_name: nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    ports:
      - '80:80'
    depends_on:
      - web
    networks:
      - appnet

volumes:
  pgdata:

networks:
  appnet:
    driver: bridge
